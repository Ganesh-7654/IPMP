#include <iostream>
#include <queue>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

bool is_complete(node* root) {
    if (!root) return true;

    std::queue<node*> q;
    q.push(root);
    bool flag = false;

    while (!q.empty()) {
        node* temp = q.front();
        q.pop();

        if (temp->left) {
            if (flag) return false;
            q.push(temp->left);
        } else {
            flag = true;
        }

        if (temp->right) {
            if (flag) return false;
            q.push(temp->right);
        } else {
            flag = true;
        }
    }
    return true;
}

int main() {
    node* root = new node(1);
    root->left = new node(2);
    root->right = new node(3);
    root->left->left = new node(4);
    root->left->right = new node(5);
    root->right->left = new node(6);

    if (is_complete(root))
        std::cout << "The tree is a Complete Binary Tree.\n";
    else
        std::cout << "The tree is not a Complete Binary Tree.\n";

    return 0;
}
