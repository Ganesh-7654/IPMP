#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

int convert_to_sum_tree(node* root) {
    if (!root) return 0;

    int left_sum = convert_to_sum_tree(root->left);
    int right_sum = convert_to_sum_tree(root->right);

    int old_val = root->val;
    root->val = left_sum + right_sum;

    return old_val + root->val;
}

void inorder(node* root) {
    if (!root) return;
    inorder(root->left);
    std::cout << root->val << " ";
    inorder(root->right);
}

int main() {
    node* root = new node(10);
    root->left = new node(-2);
    root->right = new node(6);
    root->left->left = new node(8);
    root->left->right = new node(-4);
    root->right->left = new node(7);
    root->right->right = new node(5);

    convert_to_sum_tree(root);

    inorder(root);
    return 0;
}
