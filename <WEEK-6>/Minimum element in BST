#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

// Recursive Approach
int find_min_recursive(node* root) {
    if (!root) return -1;
    if (!root->left) return root->val;
    return find_min_recursive(root->left);
}

// Iterative Approach
int find_min_iterative(node* root) {
    if (!root) return -1;
    while (root->left)
        root = root->left;
    return root->val;
}

int main() {
    node* root = new node(20);
    root->left = new node(10);
    root->right = new node(30);
    root->left->left = new node(5);
    root->left->right = new node(15);
    root->right->left = new node(25);
    root->right->right = new node(35);

    std::cout << "Minimum element (Recursive): " << find_min_recursive(root) << "\n";
    std::cout << "Minimum element (Iterative): " << find_min_iterative(root) << "\n";

    return 0;
}
