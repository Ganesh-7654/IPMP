#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

node* find_lca(node* root, int n1, int n2) {
    if (!root) return nullptr;

    if (n1 < root->val && n2 < root->val)
        return find_lca(root->left, n1, n2);

    if (n1 > root->val && n2 > root->val)
        return find_lca(root->right, n1, n2);

    return root;
}

int main() {
    node* root = new node(20);
    root->left = new node(10);
    root->right = new node(30);
    root->left->left = new node(5);
    root->left->right = new node(15);
    root->right->left = new node(25);
    root->right->right = new node(35);

    int n1 = 5, n2 = 15;
    node* lca = find_lca(root, n1, n2);

    if (lca)
        std::cout << "LCA of " << n1 << " and " << n2 << " is " << lca->val << "\n";
    else
        std::cout << "No LCA found.\n";

    return 0;
}
