#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

node* sorted_array_to_bst(int arr[], int start, int end) {
    if (start > end) return nullptr;

    int mid = (start + end) / 2;
    node* root = new node(arr[mid]);

    root->left = sorted_array_to_bst(arr, start, mid - 1);
    root->right = sorted_array_to_bst(arr, mid + 1, end);

    return root;
}

void inorder(node* root) {
    if (!root) return;
    inorder(root->left);
    std::cout << root->val << " ";
    inorder(root->right);
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    node* root = sorted_array_to_bst(arr, 0, n - 1);

    inorder(root);
    return 0;
}
