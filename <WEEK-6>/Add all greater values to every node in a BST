#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node(int v) : val(v), left(nullptr), right(nullptr) {}
};

void modify(node* root, int& sum) {
    if (!root) return;
    
    modify(root->right, sum);
    
    sum += root->val;
    root->val = sum;
    
    modify(root->left, sum);
}

void transform(node* root) {
    int sum = 0;
    modify(root, sum);
}

void inorder(node* root) {
    if (!root) return;
    inorder(root->left);
    std::cout << root->val << " ";
    inorder(root->right);
}

int main() {
    node* root = new node(5);
    root->left = new node(3);
    root->right = new node(8);
    root->left->left = new node(2);
    root->left->right = new node(4);
    root->right->left = new node(6);
    root->right->right = new node(10);

    transform(root);
    
    inorder(root);
    return 0;
}
