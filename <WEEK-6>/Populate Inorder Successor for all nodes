#include <iostream>

struct node {
    int val;
    node* left;
    node* right;
    node* next; // Pointer to Inorder Successor
    node(int v) : val(v), left(nullptr), right(nullptr), next(nullptr) {}
};

void populate_successor(node* root, node*& prev) {
    if (!root) return;

    populate_successor(root->right, prev);
    
    root->next = prev;
    prev = root;

    populate_successor(root->left, prev);
}

void inorder_successor(node* root) {
    node* prev = nullptr;
    populate_successor(root, prev);
}

void print_successors(node* root) {
    if (!root) return;
    print_successors(root->left);
    std::cout << "Node " << root->val << " -> Successor ";
    if (root->next) std::cout << root->next->val << "\n";
    else std::cout << "NULL\n";
    print_successors(root->right);
}

int main() {
    node* root = new node(20);
    root->left = new node(10);
    root->right = new node(30);
    root->left->left = new node(5);
    root->left->right = new node(15);
    root->right->left = new node(25);
    root->right->right = new node(35);

    inorder_successor(root);
    print_successors(root);

    return 0;
}
