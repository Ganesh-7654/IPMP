// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    vector<int> productExceptSelf(vector<int>& arr) {
        // code here
        int n=arr.size();
        vector<int>product(n,0);
        int k=1;
        int m=0;
        for(int i=0;i<n;i++)
        {
            if(arr[i]==0)
            {
                m++;
            }
            else
            {
                k*=arr[i];
            }
        }
        if(m>1)
        {
            return product;
        }
        if(m==1)
        {
            for(int i=0;i<n;i++)
            {
                if(arr[i]==0)
                {
                    product[i]=k;
                }
            }
            return product;
        }
        for(int i=0;i<n;i++)
        {
            product[i]=k/arr[i];
        }
        return product;
    }
};


//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    cin.ignore();

    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;

        while (ss >> number) {
            arr.push_back(number);
        }

        Solution obj;
        vector<int> res = obj.productExceptSelf(arr);

        for (int i = 0; i < res.size(); i++) {
            cout << res[i] << " ";
        }
        cout << endl;
        cout << "~\n";
    }

    return 0;
}

// } Driver Code Ends
