#include <bits/stdc++.h>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int x) {
        data = x;
        next = NULL;
    }
};

Node* kAltReverse(Node* head, int k) {
    Node* curr = head;
    Node* next = NULL;
    Node* prev = NULL;
    int count = 0;

    while (curr != NULL && count < k) {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
        count++;
    }

    if (head != NULL) {
        head->next = curr;
    }

    count = 0;
    while (count < k - 1 && curr != NULL) {
        curr = curr->next;
        count++;
    }

    if (curr != NULL) {
        curr->next = kAltReverse(curr->next, k);
    }

    return prev;
}

void printList(Node* node) {
    Node* curr = node;
    while (curr != NULL) {
        cout << curr->data << " ";
        curr = curr->next;
    }
    cout << endl;
}

int main() {
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);
    head->next->next->next->next->next = new Node(6);
    head = kAltReverse(head, 2);
    printList(head);

    return 0;
}
