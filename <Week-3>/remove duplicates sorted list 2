/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL||head->next==NULL)
        {
            return head;
        }
        ListNode* d=new ListNode();
        ListNode* p=d;
        ListNode* prev=head;
        ListNode* cur=head->next;
        int k=INT_MIN;
        while(cur!=NULL)
        {
            if(cur->val==prev->val||k==prev->val)
            {
                k=prev->val;
                delete prev;
                prev=cur;
                cur=cur->next;
            }
            else
            {
                p->next=prev;
                p=p->next;
                prev=cur;
                cur=cur->next;
            }
        }
        if(k==prev->val)
        {
            p->next=NULL;
        }
        else
        {
            p->next=prev;
        }
        ListNode* res=d->next;
        delete d;
        return res;
    }
};
